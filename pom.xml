<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <groupId>org.juhewu</groupId>
    <artifactId>juhewu-file-project</artifactId>
    <version>${revision}</version>
    <packaging>pom</packaging>

    <name>Juhewu File Project</name>
    <description>文件上传组件</description>
    <url>https://github.com/juhewu/juhewu-file-project</url>

    <modules>
        <module>juhewu-file-core</module>
        <module>juhewu-file-spring-boot</module>
    </modules>

    <properties>
        <!--项目版本号-->
        <revision>1.0.2</revision>
        <!--设置编码-->
        <encoding>utf-8</encoding>
        <!--jdk 版本号-->
        <java.version>18</java.version>
        <maven.compiler.source>18</maven.compiler.source>
        <maven.compiler.target>18</maven.compiler.target>

        <lombok.version>1.18.26</lombok.version>
        <aws.version>1.11.543</aws.version>

        <juhewu-core-base.version>1.0.0</juhewu-core-base.version>

        <aws.java.sdk.version>2.20.43</aws.java.sdk.version>

        <spring-boot.version>3.0.3</spring-boot.version>
    </properties>

    <dependencies>
        <dependency>
            <groupId>org.projectlombok</groupId>
            <artifactId>lombok</artifactId>
            <version>${lombok.version}</version>
        </dependency>
    </dependencies>

    <dependencyManagement>
        <dependencies>
            <dependency>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-dependencies</artifactId>
                <version>${spring-boot.version}</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>
            <dependency>
                <groupId>org.springframework.cloud</groupId>
                <artifactId>spring-cloud-dependencies</artifactId>
                <version>2020.0.1</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>

            <dependency>
                <groupId>software.amazon.awssdk</groupId>
                <artifactId>bom</artifactId>
                <version>${aws.java.sdk.version}</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>
        </dependencies>

    </dependencyManagement>

    <organization>
        <name>juhewu</name>
        <url>https://github.com/juhewu/</url>
    </organization>

    <scm>
        <url>https://github.com/juhewu/juhewu-oss-spring-boot-starter</url>
        <connection>scm:git:git:////github.com/juhewu/juhewu-oss-spring-boot-starter.git</connection>
        <developerConnection>scm:git:ssh://git@//github.com/juhewu/juhewu-oss-spring-boot-starter.git
        </developerConnection>
    </scm>

    <issueManagement>
        <system>Github</system>
        <url>https://github.com/juhewu/juhewu-oss-spring-boot-starter/issues</url>
    </issueManagement>

    <mailingLists>
        <mailingList>
            <name>Development List</name>
            <subscribe>dev-subscribe@dubbo.apache.org</subscribe>
            <unsubscribe>dev-unsubscribe@dubbo.apache.org</unsubscribe>
            <post>dev@juhewu.org</post>
        </mailingList>
    </mailingLists>
    <!--开发者-->
    <developers>
        <developer>
            <id>duanjiawei</id>
            <name>段佳维</name>
            <email>dev@juhewu.org</email>
            <url>https://github.com/juhewu</url>
        </developer>
    </developers>

    <!-- 许可证信息 -->
    <licenses>
        <license>
            <name>MIT License</name>
            <url>http://www.opensource.org/licenses/mit-license.php</url>
        </license>
    </licenses>

    <!-- 发布管理信息 -->
    <distributionManagement>
        <repository>
            <!-- 这里的id必须要和全局配置中的release id 一致 -->
            <id>nexus_releases</id>
            <name>Nexus Release Repository</name>
            <!-- 这里就是在创建issue成功后，对方回复的release发布地址-->
            <url>https://nexus.duanjw.com/repository/maven-releases/</url>
        </repository>
        <snapshotRepository>
            <!-- 这里的id必须要和全局配置中的snapshot id 一致 -->
            <id>nexus_snapshots</id>
            <name>Nexus Snapshot Repository</name>
            <!-- 这里就是在创建issue成功后，对方回复的snapshot发布地址-->
            <url>https://nexus.duanjw.com/repository/maven-snapshots/</url>
        </snapshotRepository>
    </distributionManagement>

    <profiles>
<!--        <profile>-->
<!--            <id>release</id>-->
<!--            <activation>-->
<!--                <activeByDefault>true</activeByDefault>-->
<!--            </activation>-->
<!--            <build>-->
<!--                <plugins>-->
<!--                    &lt;!&ndash; 要生成Javadoc和Source jar文件，您必须配置javadoc和源Maven插件 &ndash;&gt;-->
<!--                    <plugin>-->
<!--                        <groupId>org.apache.maven.plugins</groupId>-->
<!--                        <artifactId>maven-javadoc-plugin</artifactId>-->
<!--                        <version>3.2.0</version>-->
<!--                        <configuration>-->
<!--                            <aggregate>true</aggregate>-->
<!--                        </configuration>-->
<!--                        <executions>-->
<!--                            <execution>-->
<!--                                <id>attach-javadocs</id>-->
<!--                                <goals>-->
<!--                                    <goal>jar</goal>-->
<!--                                </goals>-->
<!--                            </execution>-->
<!--                        </executions>-->
<!--                    </plugin>-->
<!--                    &lt;!&ndash; 生成sources源码包的插件 &ndash;&gt;-->
<!--                    <plugin>-->
<!--                        <artifactId>maven-source-plugin</artifactId>-->
<!--                        <version>3.2.1</version>-->
<!--                        <configuration>-->
<!--                            <attach>true</attach>-->
<!--                        </configuration>-->
<!--                        <executions>-->
<!--                            <execution>-->
<!--                                <phase>package</phase>-->
<!--                                <goals>-->
<!--                                    <goal>jar-no-fork</goal>-->
<!--                                </goals>-->
<!--                            </execution>-->
<!--                        </executions>-->
<!--                    </plugin>-->
<!--                    &lt;!&ndash;  必须配置GPG插件用于使用以下配置对组件进行签名 &ndash;&gt;-->
<!--                    <plugin>-->
<!--                        <groupId>org.apache.maven.plugins</groupId>-->
<!--                        <artifactId>maven-gpg-plugin</artifactId>-->
<!--                        <version>1.6</version>-->
<!--                        <executions>-->
<!--                            <execution>-->
<!--                                <id>sign-artifacts</id>-->
<!--                                <phase>verify</phase>-->
<!--                                <goals>-->
<!--                                    <goal>sign</goal>-->
<!--                                </goals>-->
<!--                            </execution>-->
<!--                        </executions>-->
<!--                    </plugin>-->
<!--                </plugins>-->
<!--            </build>-->
<!--        </profile>-->
    </profiles>
    <build>
        <plugins>
            <plugin>
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>flatten-maven-plugin</artifactId>
                <version>1.1.0</version>
                <configuration>
                    <!-- 是否更新pom文件，此处还有更高级的用法 -->
                    <updatePomFile>true</updatePomFile>
                    <flattenMode>resolveCiFriendliesOnly</flattenMode>
                </configuration>
                <executions>
                    <execution>
                        <id>flatten</id>
                        <phase>process-resources</phase>
                        <goals>
                            <goal>flatten</goal>
                        </goals>
                    </execution>
                    <execution>
                        <id>flatten.clean</id>
                        <phase>clean</phase>
                        <goals>
                            <goal>clean</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
        </plugins>
    </build>


</project>